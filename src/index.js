/**
 * dofusdude
 * # Open Ankama Developer Community The all-in-one toolbelt for your next Ankama related project.  ## Versions - [Dofus 2](https://docs.dofusdu.de/dofus2/) - [Dofus 3](https://docs.dofusdu.de/dofus3/)   - v1 [latest] (you are here)   ## Client SDKs - [Javascript](https://github.com/dofusdude/dofusdude-js) `npm i dofusdude-js --save` - [Typescript](https://github.com/dofusdude/dofusdude-ts) `npm i dofusdude-ts --save` - [Go](https://github.com/dofusdude/dodugo) `go get -u github.com/dofusdude/dodugo` - [Python](https://github.com/dofusdude/dofusdude-py) `pip install dofusdude` - [Java](https://github.com/dofusdude/dofusdude-java) Maven with GitHub packages setup  Everything, including this site, is generated out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the Single Source of Truth. If there is a problem with the SDKs, create an issue there.  Your favorite language is missing? Please let me know!  # Main Features - ü•∑ **Seamless Auto-Update** load data in the background when a new Dofus version is released and serving it within 10 minutes with atomic data source switching. No downtime and no effects for the user, just always up-to-date.  - ‚ö° **Blazingly Fast** all data in-memory, aggressive caching over short time spans, HTTP/2 multiplexing, written in Go, optimized for low latency, hosted on bare metal in üá©üá™.  - üì® **Almanax Discord Integration** Use the endpoints as a dev or the official [Web Client](https://discord.dofusdude.com) as a user.  - ü©∏ **Dofus 3 Beta** from stable to bleeding edge by replacing /dofus3 with /dofus3beta.  - üó£Ô∏è **Multilingual** supporting _en_, _fr_, _es_, _pt_, _de_.  - üß† **Search by Relevance** allowing typos in name and description, handled by language specific text analysis and indexing.  - üïµÔ∏è **Official Sources** generated from actual data from the game.  ... and much more on the Roadmap on my [Discord](https://discord.gg/3EtHskZD8h). 
 *
 * The version of the OpenAPI document: 1.0.0-rc.9
 * Contact: stelzo@steado.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Almanax from './model/Almanax';
import AlmanaxBonus from './model/AlmanaxBonus';
import AlmanaxTribute from './model/AlmanaxTribute';
import AlmanaxTributeItem from './model/AlmanaxTributeItem';
import AlmanaxWebhook from './model/AlmanaxWebhook';
import AlmanaxWebhookDailySettings from './model/AlmanaxWebhookDailySettings';
import Condition from './model/Condition';
import ConditionLeaf from './model/ConditionLeaf';
import ConditionNode from './model/ConditionNode';
import ConditionRelation from './model/ConditionRelation';
import CreateAlmanaxWebhook from './model/CreateAlmanaxWebhook';
import CreateAlmanaxWebhookDailySettings from './model/CreateAlmanaxWebhookDailySettings';
import CreateAlmanaxWebhookMentionsValueInner from './model/CreateAlmanaxWebhookMentionsValueInner';
import CreateRSSWebhook from './model/CreateRSSWebhook';
import CreateTwitterWebhook from './model/CreateTwitterWebhook';
import Effect from './model/Effect';
import EffectType from './model/EffectType';
import Equipment from './model/Equipment';
import EquipmentSet from './model/EquipmentSet';
import Error from './model/Error';
import GameSearch from './model/GameSearch';
import GameSearchItem from './model/GameSearchItem';
import GameSearchType from './model/GameSearchType';
import GetMetaAlmanaxBonuses200ResponseInner from './model/GetMetaAlmanaxBonuses200ResponseInner';
import GetMetaWebhooksTwitter200Response from './model/GetMetaWebhooksTwitter200Response';
import Images from './model/Images';
import ItemSubtype from './model/ItemSubtype';
import ListEquipmentSet from './model/ListEquipmentSet';
import ListEquipmentSets from './model/ListEquipmentSets';
import ListItem from './model/ListItem';
import ListItemGeneral from './model/ListItemGeneral';
import ListItems from './model/ListItems';
import ListMounts from './model/ListMounts';
import Mount from './model/Mount';
import MountFamily from './model/MountFamily';
import PagedLinks from './model/PagedLinks';
import PutAlmanaxWebhook from './model/PutAlmanaxWebhook';
import PutRSSWebhook from './model/PutRSSWebhook';
import PutTwitterWebhook from './model/PutTwitterWebhook';
import Range from './model/Range';
import Recipe from './model/Recipe';
import Resource from './model/Resource';
import RssWebhook from './model/RssWebhook';
import TranslatedId from './model/TranslatedId';
import TwitterWebhook from './model/TwitterWebhook';
import Version from './model/Version';
import Weapon from './model/Weapon';
import AlmanaxApi from './api/AlmanaxApi';
import ConsumablesApi from './api/ConsumablesApi';
import CosmeticsApi from './api/CosmeticsApi';
import EquipmentApi from './api/EquipmentApi';
import GameApi from './api/GameApi';
import MetaApi from './api/MetaApi';
import MountsApi from './api/MountsApi';
import QuestItemsApi from './api/QuestItemsApi';
import ResourcesApi from './api/ResourcesApi';
import SetsApi from './api/SetsApi';
import WebhooksApi from './api/WebhooksApi';


/**
* # Open Ankama Developer Community The all-in-one toolbelt for your next Ankama related project.  ## Versions - [Dofus 2](https://docs.dofusdu.de/dofus2/) - [Dofus 3](https://docs.dofusdu.de/dofus3/)   - v1 [latest] (you are here)   ## Client SDKs - [Javascript](https://github.com/dofusdude/dofusdude-js) &#x60;npm i dofusdude-js --save&#x60; - [Typescript](https://github.com/dofusdude/dofusdude-ts) &#x60;npm i dofusdude-ts --save&#x60; - [Go](https://github.com/dofusdude/dodugo) &#x60;go get -u github.com/dofusdude/dodugo&#x60; - [Python](https://github.com/dofusdude/dofusdude-py) &#x60;pip install dofusdude&#x60; - [Java](https://github.com/dofusdude/dofusdude-java) Maven with GitHub packages setup  Everything, including this site, is generated out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the Single Source of Truth. If there is a problem with the SDKs, create an issue there.  Your favorite language is missing? Please let me know!  # Main Features - ü•∑ **Seamless Auto-Update** load data in the background when a new Dofus version is released and serving it within 10 minutes with atomic data source switching. No downtime and no effects for the user, just always up-to-date.  - ‚ö° **Blazingly Fast** all data in-memory, aggressive caching over short time spans, HTTP/2 multiplexing, written in Go, optimized for low latency, hosted on bare metal in üá©üá™.  - üì® **Almanax Discord Integration** Use the endpoints as a dev or the official [Web Client](https://discord.dofusdude.com) as a user.  - ü©∏ **Dofus 3 Beta** from stable to bleeding edge by replacing /dofus3 with /dofus3beta.  - üó£Ô∏è **Multilingual** supporting _en_, _fr_, _es_, _pt_, _de_.  - üß† **Search by Relevance** allowing typos in name and description, handled by language specific text analysis and indexing.  - üïµÔ∏è **Official Sources** generated from actual data from the game.  ... and much more on the Roadmap on my [Discord](https://discord.gg/3EtHskZD8h). .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var dofusdude = require('index'); // See note below*.
* var xxxSvc = new dofusdude.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new dofusdude.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new dofusdude.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new dofusdude.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0-rc.9
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Almanax model constructor.
     * @property {module:model/Almanax}
     */
    Almanax,

    /**
     * The AlmanaxBonus model constructor.
     * @property {module:model/AlmanaxBonus}
     */
    AlmanaxBonus,

    /**
     * The AlmanaxTribute model constructor.
     * @property {module:model/AlmanaxTribute}
     */
    AlmanaxTribute,

    /**
     * The AlmanaxTributeItem model constructor.
     * @property {module:model/AlmanaxTributeItem}
     */
    AlmanaxTributeItem,

    /**
     * The AlmanaxWebhook model constructor.
     * @property {module:model/AlmanaxWebhook}
     */
    AlmanaxWebhook,

    /**
     * The AlmanaxWebhookDailySettings model constructor.
     * @property {module:model/AlmanaxWebhookDailySettings}
     */
    AlmanaxWebhookDailySettings,

    /**
     * The Condition model constructor.
     * @property {module:model/Condition}
     */
    Condition,

    /**
     * The ConditionLeaf model constructor.
     * @property {module:model/ConditionLeaf}
     */
    ConditionLeaf,

    /**
     * The ConditionNode model constructor.
     * @property {module:model/ConditionNode}
     */
    ConditionNode,

    /**
     * The ConditionRelation model constructor.
     * @property {module:model/ConditionRelation}
     */
    ConditionRelation,

    /**
     * The CreateAlmanaxWebhook model constructor.
     * @property {module:model/CreateAlmanaxWebhook}
     */
    CreateAlmanaxWebhook,

    /**
     * The CreateAlmanaxWebhookDailySettings model constructor.
     * @property {module:model/CreateAlmanaxWebhookDailySettings}
     */
    CreateAlmanaxWebhookDailySettings,

    /**
     * The CreateAlmanaxWebhookMentionsValueInner model constructor.
     * @property {module:model/CreateAlmanaxWebhookMentionsValueInner}
     */
    CreateAlmanaxWebhookMentionsValueInner,

    /**
     * The CreateRSSWebhook model constructor.
     * @property {module:model/CreateRSSWebhook}
     */
    CreateRSSWebhook,

    /**
     * The CreateTwitterWebhook model constructor.
     * @property {module:model/CreateTwitterWebhook}
     */
    CreateTwitterWebhook,

    /**
     * The Effect model constructor.
     * @property {module:model/Effect}
     */
    Effect,

    /**
     * The EffectType model constructor.
     * @property {module:model/EffectType}
     */
    EffectType,

    /**
     * The Equipment model constructor.
     * @property {module:model/Equipment}
     */
    Equipment,

    /**
     * The EquipmentSet model constructor.
     * @property {module:model/EquipmentSet}
     */
    EquipmentSet,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The GameSearch model constructor.
     * @property {module:model/GameSearch}
     */
    GameSearch,

    /**
     * The GameSearchItem model constructor.
     * @property {module:model/GameSearchItem}
     */
    GameSearchItem,

    /**
     * The GameSearchType model constructor.
     * @property {module:model/GameSearchType}
     */
    GameSearchType,

    /**
     * The GetMetaAlmanaxBonuses200ResponseInner model constructor.
     * @property {module:model/GetMetaAlmanaxBonuses200ResponseInner}
     */
    GetMetaAlmanaxBonuses200ResponseInner,

    /**
     * The GetMetaWebhooksTwitter200Response model constructor.
     * @property {module:model/GetMetaWebhooksTwitter200Response}
     */
    GetMetaWebhooksTwitter200Response,

    /**
     * The Images model constructor.
     * @property {module:model/Images}
     */
    Images,

    /**
     * The ItemSubtype model constructor.
     * @property {module:model/ItemSubtype}
     */
    ItemSubtype,

    /**
     * The ListEquipmentSet model constructor.
     * @property {module:model/ListEquipmentSet}
     */
    ListEquipmentSet,

    /**
     * The ListEquipmentSets model constructor.
     * @property {module:model/ListEquipmentSets}
     */
    ListEquipmentSets,

    /**
     * The ListItem model constructor.
     * @property {module:model/ListItem}
     */
    ListItem,

    /**
     * The ListItemGeneral model constructor.
     * @property {module:model/ListItemGeneral}
     */
    ListItemGeneral,

    /**
     * The ListItems model constructor.
     * @property {module:model/ListItems}
     */
    ListItems,

    /**
     * The ListMounts model constructor.
     * @property {module:model/ListMounts}
     */
    ListMounts,

    /**
     * The Mount model constructor.
     * @property {module:model/Mount}
     */
    Mount,

    /**
     * The MountFamily model constructor.
     * @property {module:model/MountFamily}
     */
    MountFamily,

    /**
     * The PagedLinks model constructor.
     * @property {module:model/PagedLinks}
     */
    PagedLinks,

    /**
     * The PutAlmanaxWebhook model constructor.
     * @property {module:model/PutAlmanaxWebhook}
     */
    PutAlmanaxWebhook,

    /**
     * The PutRSSWebhook model constructor.
     * @property {module:model/PutRSSWebhook}
     */
    PutRSSWebhook,

    /**
     * The PutTwitterWebhook model constructor.
     * @property {module:model/PutTwitterWebhook}
     */
    PutTwitterWebhook,

    /**
     * The Range model constructor.
     * @property {module:model/Range}
     */
    Range,

    /**
     * The Recipe model constructor.
     * @property {module:model/Recipe}
     */
    Recipe,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The RssWebhook model constructor.
     * @property {module:model/RssWebhook}
     */
    RssWebhook,

    /**
     * The TranslatedId model constructor.
     * @property {module:model/TranslatedId}
     */
    TranslatedId,

    /**
     * The TwitterWebhook model constructor.
     * @property {module:model/TwitterWebhook}
     */
    TwitterWebhook,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The Weapon model constructor.
     * @property {module:model/Weapon}
     */
    Weapon,

    /**
    * The AlmanaxApi service constructor.
    * @property {module:api/AlmanaxApi}
    */
    AlmanaxApi,

    /**
    * The ConsumablesApi service constructor.
    * @property {module:api/ConsumablesApi}
    */
    ConsumablesApi,

    /**
    * The CosmeticsApi service constructor.
    * @property {module:api/CosmeticsApi}
    */
    CosmeticsApi,

    /**
    * The EquipmentApi service constructor.
    * @property {module:api/EquipmentApi}
    */
    EquipmentApi,

    /**
    * The GameApi service constructor.
    * @property {module:api/GameApi}
    */
    GameApi,

    /**
    * The MetaApi service constructor.
    * @property {module:api/MetaApi}
    */
    MetaApi,

    /**
    * The MountsApi service constructor.
    * @property {module:api/MountsApi}
    */
    MountsApi,

    /**
    * The QuestItemsApi service constructor.
    * @property {module:api/QuestItemsApi}
    */
    QuestItemsApi,

    /**
    * The ResourcesApi service constructor.
    * @property {module:api/ResourcesApi}
    */
    ResourcesApi,

    /**
    * The SetsApi service constructor.
    * @property {module:api/SetsApi}
    */
    SetsApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
