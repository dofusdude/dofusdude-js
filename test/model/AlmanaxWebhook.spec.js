/**
 * dofusdude
 * # A project for you - the developer. The all-in-one toolbelt for your next Ankama related project.  ## Client SDKs - [Javascript](https://github.com/dofusdude/dofusdude-js) `npm i dofusdude-js --save` - [Typescript](https://github.com/dofusdude/dofusdude-ts) `npm i dofusdude-ts --save` - [Go](https://github.com/dofusdude/dodugo) `go get -u github.com/dofusdude/dodugo` - [Python](https://github.com/dofusdude/dofusdude-py) `pip install dofusdude` - [PHP](https://github.com/dofusdude/dofusdude-php) - [Java](https://github.com/dofusdude/dofusdude-java) Maven with GitHub packages setup  Everything, including this site, is generated out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the Single Source of Truth. If there is a problem with the SDKs, create an issue there.  Your favorite language is missing? Please let me know!  # Main Features - ü•∑ **Seamless Auto-Update** load data in the background when a new Dofus version is released and serving it within 10 minutes with atomic data source switching. No downtime and no effects for the user, just always up-to-date.  - ‚ö° **Blazingly Fast** all data in-memory, aggressive caching over short time spans, HTTP/2 multiplexing, written in Go, optimized for low latency, hosted on bare metal in üá©üá™.  - üì® **Discord Integration** Ankama related RSS and Almanax feeds to post to Discord servers with advanced features like filters or mentions. Use the endpoints as a dev or the official [Web Client](https://discord.dofusdude.com) as a user.  - ü©∏ **Dofus 2 Beta** from stable to bleeding edge by replacing /dofus2 with /dofus2beta.  - üó£Ô∏è **Multilingual** supporting _en_, _fr_, _es_, _pt_ including the dropped languages from the Dofus website _de_ and _it_.  - üß† **Search by Relevance** allowing typos in name and description, handled by language specific text analysis and indexing.  - üïµÔ∏è **Complete** actual data from the game including items invisible to the encyclopedia like quest items.  - üñºÔ∏è **HD Images** rendering game assets to high-res images with up to 800x800 px.  ... and much more on the Roadmap on my [Discord](https://discord.gg/3EtHskZD8h). 
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: stelzo@steado.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.dofusdude);
  }
}(this, function(expect, dofusdude) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new dofusdude.AlmanaxWebhook();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlmanaxWebhook', function() {
    it('should create an instance of AlmanaxWebhook', function() {
      // uncomment below and update the code to test AlmanaxWebhook
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be.a(dofusdude.AlmanaxWebhook);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property dailySettings (base name: "daily_settings")', function() {
      // uncomment below and update the code to test the property dailySettings
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property bonusWhitelist (base name: "bonus_whitelist")', function() {
      // uncomment below and update the code to test the property bonusWhitelist
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property bonusBlacklist (base name: "bonus_blacklist")', function() {
      // uncomment below and update the code to test the property bonusBlacklist
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property subscriptions (base name: "subscriptions")', function() {
      // uncomment below and update the code to test the property subscriptions
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property isoDate (base name: "iso_date")', function() {
      // uncomment below and update the code to test the property isoDate
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property mentions (base name: "mentions")', function() {
      // uncomment below and update the code to test the property mentions
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property intervals (base name: "intervals")', function() {
      // uncomment below and update the code to test the property intervals
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property weeklyWeekday (base name: "weekly_weekday")', function() {
      // uncomment below and update the code to test the property weeklyWeekday
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property lastFiredAt (base name: "last_fired_at")', function() {
      // uncomment below and update the code to test the property lastFiredAt
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new dofusdude.AlmanaxWebhook();
      //expect(instance).to.be();
    });

  });

}));
